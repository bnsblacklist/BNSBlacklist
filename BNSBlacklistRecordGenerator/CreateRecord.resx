<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="submitBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wSxeGQAAAABJRU5ErkJggg==
</value>
  </data>
</root>